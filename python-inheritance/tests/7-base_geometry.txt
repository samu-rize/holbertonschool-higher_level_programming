>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
>>> bg.integer_validator("name", 12)
>>> bg.integer_validator("name", 12.3)
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", True)
>>> bg.integer_validator("name", False)
Traceback (most recent call last):
...
ValueError: name must be greater than 0
>>> bg.integer_validator("name", [1, 2])
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", (1, 2))
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", {1: 2})
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", "n")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", "nkd")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
...
ValueError: name must be greater than 0
>>> bg.integer_validator("name", -4)
Traceback (most recent call last):
...
ValueError: name must be greater than 0
>>> bg.integer_validator("name", )
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("name", )
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
>>> 
